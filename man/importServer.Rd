% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/02-importModule.R
\name{importUI}
\alias{importUI}
\alias{importServer}
\title{Import module}
\usage{
importUI(id, label = "Import Model")

importServer(
  id,
  title = "",
  defaultSource = c("ckan", "file", "url", "remoteModel"),
  ckanFileTypes = c("zip"),
  ignoreWarnings = FALSE,
  importType = c("model", "zip", "list"),
  fileExtension = "zip",
  subFolder = NULL,
  onlySettings = FALSE,
  expectedFileInZip = c(),
  options = importOptions()
)
}
\arguments{
\item{id}{id of module}

\item{label}{label of button}

\item{title}{title of import module}

\item{defaultSource}{(character) default source for input "Source", e.g. "ckan", "file", or "url"}

\item{ckanFileTypes}{(character) file types allowed for import from Pandora ("ckan"). E.g. for
`importType = "model"`: c("resources", "zip"); `importType = "zip"`: c("zip");
for `importType = "list"`: c("json")}

\item{ignoreWarnings}{(logical) TRUE to enable imports in case of warnings}

\item{importType}{(character) type of import, either "model", "zip" or "list".
ImportType == "model" expects a zip file containing a model. The file will be unzipped,
the model object extracted, and checked if it is valid for the app.
ImportType == "zip" enables the optional parameter 'expectedFileInZip'. The file is validated
and the path to the zip file will be returned.}

\item{fileExtension}{(character) (otional) app specific file extension, e.g. "resources", "bmsc",
"bpred", or (app-unspecific) "zip". Only files with this extension are valid for import.}

\item{subFolder}{(character) (optional) subfolder containing loadable .zip files.}

\item{onlySettings}{(logical) if TRUE allow only upload of user inputs and user data.}

\item{expectedFileInZip}{(character) (optional) This parameter is ignored if importType != "zip".
File names that must be contained in the zip upload.}

\item{options}{(list) Extra options for the import module. See \code{\link{importOptions}}.}
}
\description{
Displays a button which opens a import dialog when clicked

Backend for import module
}
