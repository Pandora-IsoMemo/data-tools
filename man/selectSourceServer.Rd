% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/02-importData-selectSource.R
\name{selectSourceServer}
\alias{selectSourceServer}
\title{Select Source Server}
\usage{
selectSourceServer(
  id,
  importType = "data",
  openPopupReset,
  internetCon,
  githubRepo,
  folderOnGithub,
  pathToLocal,
  ckanFileTypes = c("xls", "xlsx", "csv", "odt", "txt")
)
}
\arguments{
\item{id}{id of module}

\item{importType}{(character) type of import, either "model", "zip" or "list".
ImportType == "model" expects a zip file containing a model. The file will be unzipped,
the model object extracted, and checked if it is valid for the app.
ImportType == "zip" enables the optional parameter 'expectedFileInZip'. The file is validated
and the path to the zip file will be returned.}

\item{openPopupReset}{(reactive) TRUE if popup is (re-)opened}

\item{internetCon}{(reactive) TRUE if there is an internet connection}

\item{githubRepo}{(character) name of used github repository, e.g. "bpred"}

\item{folderOnGithub}{(character) folder on github where remote files are stored. This should
correspond to 'pathToLocal' since online and offline files should be the same and up-to-date}

\item{pathToLocal}{(character) relative path to the folder storing local files}

\item{ckanFileTypes}{(character) file types allowed for import from Pandora ("ckan"). E.g. for
`importType = "data"`: c("xls", "xlsx", "csv", "odt", "txt"); for `importType = "zip"`: c("zip");
 for `importType = "list"`: c("json")}
}
\description{
Server function of the module
}
