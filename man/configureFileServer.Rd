% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/02-importModule-configureFile.R
\name{configureFileUI}
\alias{configureFileUI}
\alias{configureFileServer}
\title{Configure File UI}
\usage{
configureFileUI(
  id,
  customHelpText = importOptions()[["customHelpText"]],
  defaultFileTypes = config()[["dataFileTypes"]],
  userFileTypes = c()
)

configureFileServer(
  id,
  importType = "model",
  dataSource,
  subFolder = NULL,
  rPackageName = importOptions()[["rPackageName"]],
  onlySettings = FALSE,
  fileExtension = "zip",
  expectedFileInZip = c()
)
}
\arguments{
\item{id}{id of module}

\item{customHelpText}{(list) A help text element that can be added to a UI definition. Output of
\code{shiny::helpText(...)}.}

\item{defaultFileTypes}{(character) default file types}

\item{userFileTypes}{(character) user file types specified in "Pandora Platform" settings}

\item{importType}{(character) type of import, either "model", "zip" or "list".
ImportType == "model" expects a zip file containing a model. The file will be unzipped,
the model object extracted, and checked if it is valid for the app.
ImportType == "zip" enables the optional parameter 'expectedFileInZip'. The file is validated
and the path to the zip file will be returned.
ImportType == "list" expects a json file containing a list. The file will be read and checked.}

\item{dataSource}{(reactiveValues) path, filename, type and input, output of \code{selectSourceServer()}}

\item{subFolder}{(character) (optional) subfolder containing loadable .zip files.}

\item{rPackageName}{(character) name of the package (as in the Description file) in which this
module is called. This value is needed to determine the Github repository of the package for
loading example models or zip or data links.}

\item{onlySettings}{(logical) if TRUE allow only upload of user inputs and user data.}

\item{fileExtension}{(character) (otional) app specific file extension, e.g. "resources", "bmsc",
"bpred", or (app-unspecific) "zip". Only files with this extension are valid for import.}

\item{expectedFileInZip}{(character) (optional) This parameter is ignored if importType != "zip".
File names that must be contained in the zip upload.}
}
\description{
UI of the module

Server function of the module
}
